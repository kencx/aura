#!/usr/bin/env bash

# aura is an aurutils wrapper for managing a custom Arch repository.
# It should be run with the custom repository's user.

set -euo pipefail

DB="custom"
REPO_DIR="/var/cache/pacman/$DB"
S3_CONFIG_DIR="/home/kenc/.mcli"
S3_CMD="mcli --config-dir=$S3_CONFIG_DIR --no-color --quiet"
S3_ALIAS="minio"
BUCKET="$S3_ALIAS/aur"

if [[ "$EUID" == 0 ]]; then
    echo "Please do not run aura as root"
    exit 1
fi

DEPENDENCIES=(aur mcli paccache)
for i in "${DEPENDENCIES[@]}"; do
    if ! command -v "$i" >/dev/null 2>&1; then
        echo -e "ERROR: \"$i\" not installed!"
        exit 1
    fi
done

if $S3_CMD alias ls --no-color --quiet "$S3_ALIAS" 2>&1 | grep -q "ERROR"; then
    echo "ERROR: S3 alias \"$S3_ALIAS\" not set up"
    exit 1
fi

if ! $S3_CMD ready --no-color --quiet "$S3_ALIAS" 2>&1 | grep -q "The cluster is ready"; then
    echo "ERROR: S3 endpoint not ready"
    exit 1
fi

if $S3_CMD ls --no-color --quiet --summarize "$BUCKET" 2>&1 | grep -q "ERROR"; then
    echo "ERROR: Bucket \"$BUCKET\" does not exist"
    exit 1
fi

help() {
    cat <<EOF
usage: aura [subcommand] [args]

aura is an aurutils wrapper for managing a custom Arch repository.
It should be run with the custom repository's user.

  Subcommand:
    help        Print help
    list, ls    List all packages in DB
    add         Add package to DB from AUR
    remove, rm  Remove package from DB
    search      Search for AUR packages
    sync        Sync packages
    clean       Sync and remove old packages
    check       Check for package updates
EOF
}

aur_sync() {
    sudo pacsync "$DB" >/dev/null
}

subcommand=${1:-}

case $subcommand in
"list" | "ls")
    aur_sync
    # consider replacing with
    # aur repo-parse -p "$REPO_DIR/$DB.db.tar.xz" --list
    aur repo --database "$DB" --list -S
    ;;

"search")
    shift
    selected=$(aur search --name "$@" --short | fzf | awk '{split($1, a, "/"); print a[2]}')
    aur sync \
        --no-view \
        --chroot \
        --pacman-conf=/etc/pacman-chroot.conf \
        --makepkg-conf=/etc/makepkg-chroot.conf \
        --database "$DB" \
        --root "$REPO_DIR" "$selected"
    $S3_CMD mirror --overwrite "$REPO_DIR" "$BUCKET"
    aur_sync
    ;;

"add")
    shift
    aur sync \
        --no-view \
        --no-confirm \
        --chroot \
        --pacman-conf=/etc/pacman-chroot.conf \
        --makepkg-conf=/etc/makepkg-chroot.conf \
        --database "$DB" \
        --root "$REPO_DIR" "$@"
    $S3_CMD mirror --overwrite "$REPO_DIR" "$BUCKET"
    aur_sync
    ;;

"remove" | "rm")
    shift
    repo-remove "$REPO_DIR/$DB.db.tar.xz" "$@"

    for pkg in "$@"; do
        find "$REPO_DIR" -type f -name "$pkg*.pkg.*" -printf "removing %P\n" -delete
        $S3_CMD find --name "$pkg*.pkg.*" "$BUCKET" --exec "$S3_CMD rm {}"
    done

    aur_sync
    ;;

"sync")
    AUR_ASROOT=1 aur sync \
        --no-view \
        --no-confirm \
        --chroot \
        --pacman-conf=/etc/pacman-chroot.conf \
        --makepkg-conf=/etc/makepkg-chroot.conf \
        --database "$DB" \
        --root "$REPO_DIR" \
        --upgrades -k0
    $S3_CMD mirror --overwrite "$REPO_DIR" "$BUCKET"
    ;;

"clean")
    AUR_ASROOT=1 aur sync \
        --no-view \
        --no-confirm \
        --chroot \
        --pacman-conf=/etc/pacman-chroot.conf \
        --makepkg-conf=/etc/makepkg-chroot.conf \
        --database "$DB" \
        --root "$REPO_DIR" \
        --upgrades -k0
    sudo paccache -rvk2 -c "$REPO_DIR"
    $S3_CMD mirror --overwrite --remove "$REPO_DIR" "$BUCKET"
    ;;

"check")
    aur repo --database "$DB" -S --upgrades
    ;;

"" | *)
    help
    exit 1
    ;;
esac
